1. compute(계산하다) + er,or(사람, 기계) = computer
2. bit : 불을 껐다(0), 켰다(1) - 2진수
   byte = 8bit : 256까지의 경우의 수
  첫자리 부호, 2^7 = 128 아스키 : 부호, 숫자, 영문자(대,소)
3. unidode : 2byte 전세계 문자를 표시
4. cpu : 연간+제어, 
   mem : 실행할 데이터, 프로세스(프로그램) : 주 기억장치
   h/d : 데이터, 프로그램 저장소 : 보조기억장치
5. low-level : 기계어, Assembler
   high-level : c, java, cobol,.. 사람이 이해하기 쉽게 만든 언어
6. compile은 언어를 기계어로 번역
7. 운영체계(operation system, os) : 하드웨어와 소프트웨어 연결

Java
1. sun사에서 만들었는데 2010년에 오라클이 인수
2. 플랫폼 독립적(이식성) : OS에 관계없이 개발하면 사용 가능
   compile한 후에 OS와의 연결 JVM(Java Virtual Machine)
3. 컴파일 : javac 프로그램명.java
    실행 : java 프로그램명
4. 객체지향 언어(java, c++, c#)
   절차지향 언어(c, cobol...)

public class 클래스명 {  // 클래스 선언
   // main method 진입메서드로 JVM이 불러서 실행
   public static void main(String[] args) { // 메서드
      // 콘솔에 "대박"라고 출력
      System.out.println("대박");
   }
}
 

범위지정 : {시작   끝}
5. 주석
   // 한줄 주석
  /* 시작  */ 끝 : 여러줄도 가능, 특정 범위도 가능
  /**    */ 위와 비슷하지만 API에서 사용
6. println : 출력후에 한줄 띄기
  print : 출력
  printf : 출력형식, %s문자열, %c문자하나, %d정수
7. 식별자 : 변수이름이나 클래스명을 구분
   1) 첫자리 : 영문자(대,소), $, _이런 것을 사용(한글도 가능)
   2) 둘째자리는 위문자에다가 숫자 추가 가능
   3) 생성자, 클래스명은 대문자로 시작
       변수명, 메서드은 소문자로 시작
8. 변수 : 변하는 수
       메모리에 저장공간을 확보하여 데이터를 저장
1) 정수 : 음수, 양수, 0
   byte : -2^7 ~ -2^-1 (-128 ~ 127) 1bye
   short : -2^15 ~ -2^15 -1 : 2byte
   int : -2^31 ~ -2^31 -1 : 4byte : default(기본)
  long : -2^63 ~ -2^63 - 1 : 8byte  숫자뒤에 영문자 L(l)을 추가
2) 실수 : 소숫점 포함
  float : 4byte 수자뒤에 F(f)을 추가
  double : byte(default, 기본)
  실수의 갯수는 무한개이므로 자바에서는 
   기수 + 가수로 표시
3) 문자 : char
4) boolean : true, false
5) 문자열은 String(클래스) : 끈 문자들을 엮어서 사용
   문자 + 문자 : 붙여 쓴다
   문자 + 숫자를 더하면 숫자가 문자로 변경
6) 범위가 다른 숫자를 연산하면 범위가 큰 쪽으로 변경
7) \n : 줄바꿈
   \t : 탭키 7칸정도 벌어짐
   \는 뒤에 있는 문자를 그대로 사용

Cast2
  99L을 정수 int i1에 대입하여 i1출력
  byte b1에 45을 대입하여 출력
  float f1에 47을 대입하여 출력
  int i2에 3.45 + 4.67한 결과를 대입하여 출력
  char c1에 69를 대입하여 출력
  int i3에 'c'을 대입하여 출력










   
